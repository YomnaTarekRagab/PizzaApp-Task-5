//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.5.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using PizzaAppData.HelperClasses;
using PizzaAppData.FactoryClasses;
using PizzaAppData.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace PizzaAppData.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'PizzasList'.<br/><br/></summary>
	[Serializable]
	public partial class PizzasListEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private OrdersListEntity _ordersList;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static PizzasListEntityStaticMetaData _staticMetaData = new PizzasListEntityStaticMetaData();
		private static PizzasListRelations _relationsFactory = new PizzasListRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name OrdersList</summary>
			public static readonly string OrdersList = "OrdersList";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class PizzasListEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public PizzasListEntityStaticMetaData()
			{
				SetEntityCoreInfo("PizzasListEntity", InheritanceHierarchyType.None, false, (int)PizzaAppData.EntityType.PizzasListEntity, typeof(PizzasListEntity), typeof(PizzasListEntityFactory), false);
				AddNavigatorMetaData<PizzasListEntity, OrdersListEntity>("OrdersList", "PizzasLists", (a, b) => a._ordersList = b, a => a._ordersList, (a, b) => a.OrdersList = b, PizzaAppData.RelationClasses.StaticPizzasListRelations.OrdersListEntityUsingOrderIdStatic, ()=>new PizzasListRelations().OrdersListEntityUsingOrderId, null, new int[] { (int)PizzasListFieldIndex.OrderId }, null, true, (int)PizzaAppData.EntityType.OrdersListEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static PizzasListEntity()
		{
		}

		/// <summary> CTor</summary>
		public PizzasListEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public PizzasListEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this PizzasListEntity</param>
		public PizzasListEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for PizzasList which data should be fetched into this PizzasList object</param>
		/// <param name="orderId">PK value for PizzasList which data should be fetched into this PizzasList object</param>
		public PizzasListEntity(System.Int32 id, System.Int32 orderId) : this(id, orderId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for PizzasList which data should be fetched into this PizzasList object</param>
		/// <param name="orderId">PK value for PizzasList which data should be fetched into this PizzasList object</param>
		/// <param name="validator">The custom validator object for this PizzasListEntity</param>
		public PizzasListEntity(System.Int32 id, System.Int32 orderId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
			this.OrderId = orderId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected PizzasListEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'OrdersList' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrdersList() { return CreateRelationInfoForNavigator("OrdersList"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this PizzasListEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static PizzasListRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrdersList' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrdersList { get { return _staticMetaData.GetPrefetchPathElement("OrdersList", CommonEntityBase.CreateEntityCollection<OrdersListEntity>()); } }

		/// <summary>The Id property of the Entity PizzasList<br/><br/></summary>
		/// <remarks>Mapped on  table field: "pizzas_list"."id".<br/>Table field type characteristics (type, precision, scale, length): Integer, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 Id
		{
			get { return (System.Int32)GetValue((int)PizzasListFieldIndex.Id, true); }
			set { SetValue((int)PizzasListFieldIndex.Id, value); }		}

		/// <summary>The OrderId property of the Entity PizzasList<br/><br/></summary>
		/// <remarks>Mapped on  table field: "pizzas_list"."order_id".<br/>Table field type characteristics (type, precision, scale, length): Integer, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 OrderId
		{
			get { return (System.Int32)GetValue((int)PizzasListFieldIndex.OrderId, true); }
			set	{ SetValue((int)PizzasListFieldIndex.OrderId, value); }
		}

		/// <summary>The PricePerPizza property of the Entity PizzasList<br/><br/></summary>
		/// <remarks>Mapped on  table field: "pizzas_list"."price_per_pizza".<br/>Table field type characteristics (type, precision, scale, length): Double, 38, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Double PricePerPizza
		{
			get { return (System.Double)GetValue((int)PizzasListFieldIndex.PricePerPizza, true); }
			set	{ SetValue((int)PizzasListFieldIndex.PricePerPizza, value); }
		}

		/// <summary>The Side property of the Entity PizzasList<br/><br/></summary>
		/// <remarks>Mapped on  table field: "pizzas_list"."side".<br/>Table field type characteristics (type, precision, scale, length): Text, 0, 0, 1073741824.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Side
		{
			get { return (System.String)GetValue((int)PizzasListFieldIndex.Side, true); }
			set	{ SetValue((int)PizzasListFieldIndex.Side, value); }
		}

		/// <summary>The Size property of the Entity PizzasList<br/><br/></summary>
		/// <remarks>Mapped on  table field: "pizzas_list"."size".<br/>Table field type characteristics (type, precision, scale, length): Text, 0, 0, 1073741824.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Size
		{
			get { return (System.String)GetValue((int)PizzasListFieldIndex.Size, true); }
			set	{ SetValue((int)PizzasListFieldIndex.Size, value); }
		}

		/// <summary>The Topping property of the Entity PizzasList<br/><br/></summary>
		/// <remarks>Mapped on  table field: "pizzas_list"."topping".<br/>Table field type characteristics (type, precision, scale, length): Text, 0, 0, 1073741824.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Topping
		{
			get { return (System.String)GetValue((int)PizzasListFieldIndex.Topping, true); }
			set	{ SetValue((int)PizzasListFieldIndex.Topping, value); }
		}

		/// <summary>Gets / sets related entity of type 'OrdersListEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual OrdersListEntity OrdersList
		{
			get { return _ordersList; }
			set { SetSingleRelatedEntityNavigator(value, "OrdersList"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace PizzaAppData
{
	public enum PizzasListFieldIndex
	{
		///<summary>Id. </summary>
		Id,
		///<summary>OrderId. </summary>
		OrderId,
		///<summary>PricePerPizza. </summary>
		PricePerPizza,
		///<summary>Side. </summary>
		Side,
		///<summary>Size. </summary>
		Size,
		///<summary>Topping. </summary>
		Topping,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace PizzaAppData.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: PizzasList. </summary>
	public partial class PizzasListRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between PizzasListEntity and OrdersListEntity over the m:1 relation they have, using the relation between the fields: PizzasList.OrderId - OrdersList.Id</summary>
		public virtual IEntityRelation OrdersListEntityUsingOrderId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "OrdersList", false, new[] { OrdersListFields.Id, PizzasListFields.OrderId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticPizzasListRelations
	{
		internal static readonly IEntityRelation OrdersListEntityUsingOrderIdStatic = new PizzasListRelations().OrdersListEntityUsingOrderId;

		/// <summary>CTor</summary>
		static StaticPizzasListRelations() { }
	}
}
